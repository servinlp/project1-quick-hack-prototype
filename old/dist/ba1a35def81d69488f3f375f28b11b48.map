{"version":3,"sources":["node_modules/core-js/library/modules/_is-object.js","node_modules/core-js/library/modules/_uid.js","node_modules/core-js/library/modules/_has.js","node_modules/core-js/library/modules/_an-object.js","node_modules/core-js/library/modules/_fails.js","node_modules/core-js/library/modules/_descriptors.js","node_modules/core-js/library/modules/_global.js","node_modules/core-js/library/modules/_dom-create.js","node_modules/core-js/library/modules/_ie8-dom-define.js","node_modules/core-js/library/modules/_to-primitive.js","node_modules/core-js/library/modules/_object-dp.js","node_modules/core-js/library/modules/_meta.js","node_modules/core-js/library/modules/_core.js","node_modules/core-js/library/modules/_a-function.js","node_modules/core-js/library/modules/_ctx.js","node_modules/core-js/library/modules/_property-desc.js","node_modules/core-js/library/modules/_hide.js","node_modules/core-js/library/modules/_export.js","node_modules/core-js/library/modules/_object-sap.js","node_modules/core-js/library/modules/es6.object.freeze.js","node_modules/core-js/library/fn/object/freeze.js","node_modules/babel-runtime/core-js/object/freeze.js","node_modules/core-js/library/modules/_to-integer.js","node_modules/core-js/library/modules/_defined.js","node_modules/core-js/library/modules/_string-at.js","node_modules/core-js/library/modules/_library.js","node_modules/core-js/library/modules/_redefine.js","node_modules/core-js/library/modules/_iterators.js","node_modules/core-js/library/modules/_cof.js","node_modules/core-js/library/modules/_iobject.js","node_modules/core-js/library/modules/_to-iobject.js","node_modules/core-js/library/modules/_to-length.js","node_modules/core-js/library/modules/_to-absolute-index.js","node_modules/core-js/library/modules/_array-includes.js","node_modules/core-js/library/modules/_shared.js","node_modules/core-js/library/modules/_shared-key.js","node_modules/core-js/library/modules/_object-keys-internal.js","node_modules/core-js/library/modules/_enum-bug-keys.js","node_modules/core-js/library/modules/_object-keys.js","node_modules/core-js/library/modules/_object-dps.js","node_modules/core-js/library/modules/_html.js","node_modules/core-js/library/modules/_object-create.js","node_modules/core-js/library/modules/_wks.js","node_modules/core-js/library/modules/_set-to-string-tag.js","node_modules/core-js/library/modules/_iter-create.js","node_modules/core-js/library/modules/_to-object.js","node_modules/core-js/library/modules/_object-gpo.js","node_modules/core-js/library/modules/_iter-define.js","node_modules/core-js/library/modules/es6.string.iterator.js","node_modules/core-js/library/modules/_add-to-unscopables.js","node_modules/core-js/library/modules/_iter-step.js","node_modules/core-js/library/modules/es6.array.iterator.js","node_modules/core-js/library/modules/web.dom.iterable.js","node_modules/core-js/library/modules/_wks-ext.js","node_modules/core-js/library/fn/symbol/iterator.js","node_modules/babel-runtime/core-js/symbol/iterator.js","node_modules/core-js/library/modules/_wks-define.js","node_modules/core-js/library/modules/_object-gops.js","node_modules/core-js/library/modules/_object-pie.js","node_modules/core-js/library/modules/_enum-keys.js","node_modules/core-js/library/modules/_is-array.js","node_modules/core-js/library/modules/_object-gopn.js","node_modules/core-js/library/modules/_object-gopn-ext.js","node_modules/core-js/library/modules/_object-gopd.js","node_modules/core-js/library/modules/es6.symbol.js","node_modules/core-js/library/modules/es7.symbol.async-iterator.js","node_modules/core-js/library/modules/es7.symbol.observable.js","node_modules/core-js/library/fn/symbol/index.js","node_modules/babel-runtime/core-js/symbol.js","node_modules/babel-runtime/helpers/typeof.js","node_modules/core-js/library/modules/es6.object.keys.js","node_modules/core-js/library/fn/object/keys.js","node_modules/babel-runtime/core-js/object/keys.js","node_modules/core-js/library/fn/json/stringify.js","node_modules/babel-runtime/core-js/json/stringify.js","node_modules/core-js/library/modules/es6.object.create.js","node_modules/core-js/library/fn/object/create.js","node_modules/babel-runtime/core-js/object/create.js","node_modules/core-js/library/modules/es6.object.define-properties.js","node_modules/core-js/library/fn/object/define-properties.js","node_modules/babel-runtime/core-js/object/define-properties.js","node_modules/core-js/library/modules/_object-assign.js","node_modules/core-js/library/modules/es6.object.assign.js","node_modules/core-js/library/fn/object/assign.js","node_modules/babel-runtime/core-js/object/assign.js","node_modules/core-js/library/modules/_math-sign.js","node_modules/core-js/library/modules/es6.math.sign.js","node_modules/core-js/library/fn/math/sign.js","node_modules/babel-runtime/core-js/math/sign.js","node_modules/core-js/library/modules/_is-integer.js","node_modules/core-js/library/modules/es6.number.is-integer.js","node_modules/core-js/library/fn/number/is-integer.js","node_modules/babel-runtime/core-js/number/is-integer.js","node_modules/core-js/library/modules/es6.number.epsilon.js","node_modules/core-js/library/fn/number/epsilon.js","node_modules/babel-runtime/core-js/number/epsilon.js","src/js/THREE/three.module.js","src/js/THREE/OrbitControls.js","src/js/_base.js","src/js/render.js","src/js/stats.js","node_modules/babel-runtime/helpers/classCallCheck.js","node_modules/core-js/library/modules/es6.object.define-property.js","node_modules/core-js/library/fn/object/define-property.js","node_modules/babel-runtime/core-js/object/define-property.js","node_modules/babel-runtime/helpers/createClass.js","src/js/config.js","src/js/gallary_item.js","src/js/gallary_container.js","src/js/api.js","src/js/initialize_scene.js","src/js/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["undefined","Number","EPSILON","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","toUpperCase","d0","random","d1","d2","d3","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","Matrix4","error","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","z","extractRotation","Vector3","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","d","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","_x","_y","_z","_w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","compose","position","quaternion","decompose","vector","matrix","sx","sy","sz","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","p","Quaternion","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","r","EPS","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","Matrix3","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","name","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","isTexture","toJSON","meta","isRootObject","textures","getDataURL","canvas","HTMLCanvasElement","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","metadata","generator","wrap","images","url","dispose","transformUv","uv","Vector4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","isWebGLRenderTargetCube","DataTexture","data","isDataTexture","CubeTexture","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","map","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","u","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","object","upload","values","needsUpdate","seqWithValue","ColorKeywords","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hsl","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","UniformsLib","common","diffuse","opacity","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","direction","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","points","UniformsUtils","merge","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","Array","isArray","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","ShaderChunk","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearCoat","clearCoatRoughness","CanvasTexture","WebGLSpriteRenderer","state","capabilities","vertexBuffer","elementBuffer","attributes","spritePosition","spriteRotation","spriteScale","init","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createProgram","getAttribLocation","uvOffset","uvScale","modelViewMatrix","fogType","fogDepth","alphaTest","fillStyle","fillRect","render","sprites","scene","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","disable","CULL_FACE","enable","BLEND","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","oldFogType","sceneFogType","isFog","isFogExp2","density","sprite","matrixWorldInverse","sort","painterSortStable","material","visible","onBeforeRender","setBlending","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","buffers","setTest","depthTest","setMask","depthWrite","colorWrite","drawElements","TRIANGLES","UNSIGNED_SHORT","onAfterRender","reset","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","precision","join","compileShader","attachShader","linkProgram","renderOrder","materialId","Material","side","flatShading","vertexColors","transparent","depthFunc","clippingPlanes","clipIntersection","clipShadows","shadowSide","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","userData","isMaterial","onBeforeCompile","setValues","key","newValue","currentValue","isRoot","emissiveIntensity","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","skinning","extractFromCache","cache","JSON","parse","srcPlanes","dstPlanes","MeshDepthMaterial","parameters","depthPacking","isMeshDepthMaterial","MeshDistanceMaterial","isMeshDistanceMaterial","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","result","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","isBufferGeometry","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","p0","p1","p2","triangle","distanceToPoint","clampedPoint","getBoundingSphere","Sphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","Frustum","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","negRadius","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","enabled","autoUpdate","_gl","_state","setClear","setScissorTest","faceCount","light","isPointLight","shadowCamera","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","setRenderTarget","clear","face","vpDimensions","renderObject","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","morphAttributes","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","layers","test","isMesh","isLine","isPoints","castShadow","frustumCulled","groups","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","children","WebGLAttributes","bufferType","usage","dynamic","DYNAMIC_DRAW","buffer","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","toggle","object3DId","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","enumerable","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","geometries","materials","shapes","serialize","library","element","shape","uuids","recursive","Camera","OrthographicCamera","zoom","view","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","Face3","vertexNormals","geometryId","Geometry","colors","faceVertexUvs","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","bufferGeometryId","BufferGeometry","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","combine","isMeshBasicMaterial","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","isShaderMaterial","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","area","midpoint","edgeList","projectedPoint","minDistance","Mesh","drawMode","updateMorphTargets","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","keys","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","faceIndex","intersects","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","clearColor","clearAlpha","planeCamera","planeMesh","boxMesh","renderList","forceClear","background","autoClear","autoClearColor","autoClearDepth","autoClearStencil","getClearColor","setClearColor","getClearAlpha","setClearAlpha","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","absNumericalSort","WebGLMorphtargets","influencesList","objectInfluences","influences","getUniforms","WebGLIndexedBufferRenderer","infoRender","mode","setMode","calls","POINTS","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLObjects","updateList","frame","addLineNumbers","lines","split","WebGLShader","shader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","logarithmicDepthBuffer","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLTextures","utils","_isWebGL2","WebGL2RenderingContext","_videoTextures","_canvas","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","NEAREST","LINEAR","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","updateVideoTexture","__version","complete","uploadTexture","bindTexture","TEXTURE_2D","createTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","mipmap","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","setTextureCubeDynamic","textureType","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","MAX_VERTEX_ATTRIBS","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","maxTextures","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","RGBA","emptyTextures","setFlipSided","setCullFace","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setMaterial","frontFaceCW","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","webglSlot","webglType","boundTexture","apply","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","skew","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","poseTarget","window","VRFrameData","cameraL","bounds","cameraR","cameraVR","currentSize","currentPixelRatio","onVRDisplayPresentChange","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","submitFrame","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","numPlanes","numIntersection","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","UniformsCache","halfWidth","halfHeight","WebGLLights","stateId","ambient","vector3","matrix42","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","intensity","isAmbientLight","isDirectionalLight","bias","isSpotLight","penumbra","isRectAreaLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","spritesArray","pushLight","pushShadow","shadowLight","pushSprite","setupLights","WebGLRenderStates","renderStates","renderState","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","_infoMemory","_infoRender","memory","autoReset","resetInfo","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","message","objects","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","spriteRenderer","initGLContext","vr","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","stopAnimation","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","isInstancedBufferGeometry","startIndex","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","initMaterial","isAnimating","onAnimationFrame","startAnimation","requestAnimationLoopFrame","requestAnimationFrame","animationLoop","time","animate","projectObject","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isSprite","isImmediateRenderObject","camera2","materialProperties","programChange","lightsHash","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsDepth","refreshUniformsDistance","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","FogExp2","Fog","Scene","SpriteMaterial","isSpriteMaterial","Sprite","intersectPoint","worldPosition","worldScale","guessSizeSq","LOD","levels","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","LineSegments","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","nbVertices","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","Group","isGroup","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateBufferData","generateSegment","generateIndices","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","prev","ear","pass","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","nextZ","prevZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q2","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","addShapeList","getArrays","positionAttribute","verticesArray","uvAttribute","IndexAttribute","indicesArray","sl","arrays","addShape","placeholder","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","extrudePts","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","splineTube","binormal","position2","getSpacedPoints","ahole","hl","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","extrudeMaterial","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","RawShaderMaterial","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","callbacks","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","crossOrigin","substr","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","weight","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","tangent","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","StringKeyframeTrack","times","interpolation","KeyframeTrack","ValueTypeName","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","BooleanKeyframeTrack","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","QuaternionLinearInterpolant","QuaternionKeyframeTrack","getValueSize","ColorKeyframeTrack","NumberKeyframeTrack","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","TimeBufferType","setInterpolation","validate","optimize","trackType","_getTrackTypeForValueTypeName","track","getInterpolation","typeName","VectorKeyframeTrack","InterpolantFactoryMethodDiscrete","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","AnimationClip","duration","tracks","resetDuration","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","shading","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","onLoadStart","onLoadProgress","onLoadComplete","Handlers","handlers","regex","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","JSONLoader","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","lastIndexOf","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","setOptions","then","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","setContext","AudioLoader","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","RESERVED_CHARS_RE","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","create","root","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","isInterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","vec3","Cylindrical","Box2","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","getStandingMatrix","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","CubeGeometry","THREE","OrbitControls","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","ORBIT","ZOOM","PAN","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","changeEvent","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","body","targetDistance","clientHeight","clientWidth","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","keyCode","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleTouchEnd","button","stopPropagation","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","innerWidth","innerHeight","devicePixelRatio","appendChild","resizeWindow","ambientlight","axesHelper","controls","Stats","createElement","cssText","showPanel","addPanel","panel","dom","display","beginTime","fpsPanel","Panel","msPanel","self","memPanel","begin","usedJSHeapSize","jsHeapSizeLimit","fg","bg","PR","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","textBaseline","fillText","globalAlpha","maxValue","gallary","tile","number","margin","GallaryItem","renderTile","startProssesing","theOldFashionWay","that","img","Image","_drawImage","naturalWidth","naturalHeight","ratio","GallaryContainer","totalWorkers","navigator","hardwareConcurrency","all","allObjects","done","waitingList","processing","dat","item","createGallaryItems","gallaryContainer","getOverviewData","localStorage","getItem","setNewData","sparqlquery","encodedquery","encodeURIComponent","queryurl","setItem","err","initializeScene","IFFE","bundleURL","getBundleURLCached","getBundleURL","stack","getBaseURL","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module"],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChrDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpjvjbA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzbbtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjlnBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"ba1a35def81d69488f3f375f28b11b48.map","sourcesContent":["module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","module.exports = true;\n","module.exports = require('./_hide');\n","module.exports = {};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = (!BUGGY && $native) || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","module.exports = function () { /* empty */ };\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","exports.f = require('./_wks');\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","exports.f = Object.getOwnPropertySymbols;\n","exports.f = {}.propertyIsEnumerable;\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/define-properties\"), __esModule: true };","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n","// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { sign: require('./_math-sign') });\n","require('../../modules/es6.math.sign');\nmodule.exports = require('../../modules/_core').Math.sign;\n","module.exports = { \"default\": require(\"core-js/library/fn/math/sign\"), __esModule: true };","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","require('../../modules/es6.number.is-integer');\nmodule.exports = require('../../modules/_core').Number.isInteger;\n","module.exports = { \"default\": require(\"core-js/library/fn/number/is-integer\"), __esModule: true };","// 20.1.2.1 Number.EPSILON\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });\n","require('../../modules/es6.number.epsilon');\nmodule.exports = Math.pow(2, -52);\n","module.exports = { \"default\": require(\"core-js/library/fn/number/epsilon\"), __esModule: true };","/* eslint-disable */\n// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '90dev';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 ).toUpperCase();\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\treturn lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tgl.uniform1f( this.addr, v );\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tgl.uniform1i( this.addr, v );\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t} else {\n\n\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tif ( v.x !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t} else {\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t} else {\n\n\t\t gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat3array.set( v.elements );\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat4array.set( v.elements );\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\tfor ( ; ; ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\tpath = info.name,\n\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( optionalTarget ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\thsl.h = hue;\n\t\thsl.s = saturation;\n\t\thsl.l = lightness;\n\n\t\treturn hsl;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tvar hsl = this.getHSL();\n\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars: lights_pars,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_template: lights_template,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment: normal_fragment,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tcenter: gl.getUniformLocation( program, 'center' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\t\tvar center = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tcenter[ 0 ] = sprite.center.x - 0.5;\n\t\t\tcenter[ 1 ] = sprite.center.y - 0.5;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.center, center );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 center;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = ( position - center ) * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\tthis.getCenter( result.center );\n\n\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tresult.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tresult.sub( this.center ).normalize();\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\tvar box = optionalTarget || new Box3();\n\n\t\tbox.set( this.center, this.center );\n\t\tbox.expandByScalar( this.radius );\n\n\t\treturn box;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = {};\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers[ attribute.uuid ];\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldRotation: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tvar d = 0;\n\t\tvar vertices = this.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.uuid = _Math.generateUUID();\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyIndicesArray: function ( indices ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\tvar index = indices[ i ];\n\n\t\t\tarray[ offset ++ ] = index.a;\n\t\t\tarray[ offset ++ ] = index.b;\n\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.indices = [];\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = source.defines;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\tresult.subVectors( point, this.origin );\n\t\tvar directionDistance = result.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn result.copy( this.origin );\n\n\t\t}\n\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, optionalTarget );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, optionalTarget ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tnormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tbarycoordFromPoint: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tarea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function area() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tmidpoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tnormal: function ( optionalTarget ) {\n\n\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tplane: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Plane();\n\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tgeometries.update( boxMesh.geometry );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tgeometries.update( planeMesh.geometry );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar position = geometry.attributes.position;\n\n\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\tcount = position.data.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfoMemory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfoMemory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, infoRender ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = infoRender.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory, infoRender ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfoMemory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfoMemory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfoMemory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t_gl.generateMipmap( target );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = infoRender.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = {};\n\n\tfunction get( object ) {\n\n\t\tvar uuid = object.uuid;\n\t\tvar map = properties[ uuid ];\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties[ uuid ] = map;\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tdelete properties[ object.uuid ];\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tvar uuid = object.uuid;\n\t\tvar map = properties[ uuid ];\n\n\t\tmap[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t   version = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t   lineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t   version = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t   lineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\tmaterial.transparent === true\n\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t: setBlending( NoBlending );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( device !== null && device.isPresenting ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t}\n\n\t}\n\n\tif ( typeof window !== 'undefined' ) {\n\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) return camera;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\tposeObject.position.fromArray( pose.position );\n\n\t\t} else {\n\n\t\t\tposeObject.position.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\tposeObject.quaternion.fromArray( pose.orientation );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK @mrdoob\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLLights( stateId ) {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\t// TODO (sam-g-steel) why aren't we using join\n\t\tstate.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length + ',' + stateId;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar count = 0;\n\nfunction WebGLRenderState() {\n\n\tvar id = count ++;\n\n\tvar lights = new WebGLLights( id );\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\tvar spritesArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\t\tspritesArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction pushSprite( shadowLight ) {\n\n\t\tspritesArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\t\tspritesArray: spritesArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow,\n\t\tpushSprite: pushSprite\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\n\t\tvar renderState = renderStates[ hash ];\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ hash ] = renderState;\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3(),\n\n\t\t// info\n\n\t\t_infoMemory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t},\n\n\t\t_infoRender = {\n\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\tthis.info = {\n\n\t\trender: _infoRender,\n\t\tmemory: _infoMemory,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: resetInfo\n\n\t};\n\n\tfunction resetInfo() {\n\n\t\t_infoRender.frame ++;\n\t\t_infoRender.calls = 0;\n\t\t_infoRender.vertices = 0;\n\t\t_infoRender.faces = 0;\n\t\t_infoRender.points = 0;\n\n\t}\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory, _infoRender );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\tobjects = new WebGLObjects( geometries, _infoRender );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\t_this.info.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tstopAnimation();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar isAnimating = false;\n\tvar onAnimationFrame = null;\n\n\tfunction startAnimation() {\n\n\t\tif ( isAnimating ) return;\n\n\t\trequestAnimationLoopFrame();\n\n\t\tisAnimating = true;\n\n\t}\n\n\tfunction stopAnimation() {\n\n\t\tisAnimating = false;\n\n\t}\n\n\tfunction requestAnimationLoopFrame() {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tdevice.requestAnimationFrame( animationLoop );\n\n\t\t} else {\n\n\t\t\twindow.requestAnimationFrame( animationLoop );\n\n\t\t}\n\n\t}\n\n\tfunction animationLoop( time ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tonAnimationFrame( time );\n\n\t\trequestAnimationLoopFrame();\n\n\t}\n\n\tthis.animate = function ( callback ) {\n\n\t\tonAnimationFrame = callback;\n\t\tonAnimationFrame !== null ? startAnimation() : stopAnimation();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tvar spritesArray = currentRenderState.state.spritesArray;\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushSprite( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\tproperties.update( material, 'lightsHash', lights.state.hash );\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\t\t\t\tvar rotation = uvScaleMap.rotation;\n\t\t\t\tvar center = uvScaleMap.center;\n\n\t\t\t\tuvScaleMap.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\t\t\t\tvar rotation = material.map.rotation;\n\t\t\t\tvar center = material.map.center;\n\n\t\t\t\tmaterial.map.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = null;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar internalFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, internalFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color.getHex(), this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldPosition = new Vector3();\n\t\tvar worldScale = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tp0 = func( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *  frames: <Object> // containing arrays of tangents, normals, binormals\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\treturn;\n\n\t}\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeVertexNormals();\n\n\t// can't really use automatic vertex normals\n\t// as then front and back sides get smoothed too\n\t// should do separate smoothing just for sides\n\n\t//this.computeVertexNormals();\n\n\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\tvar positionAttribute = this.getAttribute( \"position\" );\n\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\tvar uvAttribute = this.getAttribute( \"uv\" );\n\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\tvar IndexAttribute = this.index;\n\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\treturn {\n\t\tposition: verticesArray,\n\t\tuv: uvArray,\n\t\tindex: indicesArray\n\t};\n\n};\n\nExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\tvar sl = shapes.length;\n\toptions.arrays = this.getArrays();\n\n\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\tvar shape = shapes[ s ];\n\t\tthis.addShape( shape, options );\n\n\t}\n\n\tthis.setIndex( options.arrays.index );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n};\n\nExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\tvar verticesArray = arrays.position;\n\tvar indicesArray = arrays.index;\n\tvar uvArray = arrays.uv;\n\n\tvar placeholder = [];\n\n\n\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\tvar extrudePath = options.extrudePath;\n\tvar extrudePts, extrudeByPath = false;\n\n\t// Use default WorldUVGenerator if no UV generators are specified.\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\tvar splineTube, binormal, normal, position2;\n\tif ( extrudePath ) {\n\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\textrudeByPath = true;\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t// SETUP TNB variables\n\n\t\t// TODO1 - have a .isClosed in spline?\n\n\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\tbinormal = new Vector3();\n\t\tnormal = new Vector3();\n\t\tposition2 = new Vector3();\n\n\t}\n\n\t// Safeguards if bevels are not enabled\n\n\tif ( ! bevelEnabled ) {\n\n\t\tbevelSegments = 0;\n\t\tbevelThickness = 0;\n\t\tbevelSize = 0;\n\n\t}\n\n\t// Variables initialization\n\n\tvar ahole, h, hl; // looping of holes\n\tvar scope = this;\n\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t/* Vertices */\n\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\tvertices = vertices.concat( ahole );\n\n\t}\n\n\n\tfunction scalePt2( pt, vec, size ) {\n\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t}\n\n\tvar b, bs, t, z,\n\t\tvert, vlen = vertices.length,\n\t\tface, flen = faces.length;\n\n\n\t// Find directions for point movement\n\n\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t//\n\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t// check for collinear edges\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t// not collinear\n\n\t\t\t// length of vectors for normalizing\n\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t// vector from inPt to intersection point\n\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t//  but prevent crazy spikes\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t} else {\n\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// handle special case of collinear edges\n\n\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( direction_eq ) {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t} else {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t}\n\n\n\tvar contourMovements = [];\n\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\tif ( j === il ) j = 0;\n\t\tif ( k === il ) k = 0;\n\n\t\t//  (j)---(i)---(k)\n\t\t// console.log('i,j,k', i, j , k)\n\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t}\n\n\tvar holesMovements = [],\n\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\toneHoleMovements = [];\n\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t}\n\n\t\tholesMovements.push( oneHoleMovements );\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t}\n\n\n\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\tv( vert.x, vert.y, - z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbs = bevelSize;\n\n\t// Back facing vertices\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\tif ( ! extrudeByPath ) {\n\n\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t} else {\n\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t}\n\n\t}\n\n\t// Add stepped vertices...\n\t// Including front facing vertices\n\n\tvar s;\n\n\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Add bevel segments planes\n\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Faces */\n\n\t// Top and bottom faces\n\n\tbuildLidFaces();\n\n\t// Sides faces\n\n\tbuildSideFaces();\n\n\n\t/////  Internal functions\n\n\tfunction buildLidFaces() {\n\n\t\tvar start = verticesArray.length / 3;\n\n\t\tif ( bevelEnabled ) {\n\n\t\t\tvar layer = 0; // steps + 1\n\t\t\tvar offset = vlen * layer;\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t}\n\n\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\toffset = vlen * layer;\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t}\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.addGroup( start, verticesArray.length / 3 - start, options.material !== undefined ? options.material : 0 );\n\n\t}\n\n\t// Create faces for the z-sides of the shape\n\n\tfunction buildSideFaces() {\n\n\t\tvar start = verticesArray.length / 3;\n\t\tvar layeroffset = 0;\n\t\tsidewalls( contour, layeroffset );\n\t\tlayeroffset += contour.length;\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t//, true\n\t\t\tlayeroffset += ahole.length;\n\n\t\t}\n\n\n\t\tscope.addGroup( start, verticesArray.length / 3 - start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1 );\n\n\n\t}\n\n\tfunction sidewalls( contour, layeroffset ) {\n\n\t\tvar j, k;\n\t\ti = contour.length;\n\n\t\twhile ( -- i >= 0 ) {\n\n\t\t\tj = i;\n\t\t\tk = i - 1;\n\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\tvar s = 0,\n\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\tf4( a, b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction v( x, y, z ) {\n\n\t\tplaceholder.push( x );\n\t\tplaceholder.push( y );\n\t\tplaceholder.push( z );\n\n\t}\n\n\n\tfunction f3( a, b, c ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( c );\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\n\t}\n\n\tfunction f4( a, b, c, d ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( d );\n\n\t\taddVertex( b );\n\t\taddVertex( c );\n\t\taddVertex( d );\n\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t}\n\n\tfunction addVertex( index ) {\n\n\t\tindicesArray.push( verticesArray.length / 3 );\n\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t}\n\n\n\tfunction addUV( vector2 ) {\n\n\t\tuvArray.push( vector2.x );\n\t\tuvArray.push( vector2.y );\n\n\t}\n\n\tif ( ! options.arrays ) {\n\n\t\tthis.setIndex( indicesArray );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t}\n\n};\n\nExtrudeGeometry.WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON( shapes, data );\n\n};\n\n//\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>,\n *  opacity: <float>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.opacity = 1.0;\n\n\tthis.lights = true;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\timage.addEventListener( 'load', function () {\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\t/*\n\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t}, false );\n\t\t*/\n\n\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && curve.isLineCurve ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {\n\n\tthis.onLoadStart = function () {};\n\tthis.onLoadProgress = function () {};\n\tthis.onLoadComplete = function () {};\n\n}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: undefined,\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar parts = url.split( '/' );\n\n\t\tif ( parts.length === 1 ) return './';\n\n\t\tparts.pop();\n\n\t\treturn parts.join( '/' ) + '/';\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = data.shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ i ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function load( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, divisions, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, divisions, data ) {\n\n\tvar chars = String( text ).split( '' );\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, divisions, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, divisions, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = AudioContext.getContext();\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending < 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 0 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector2();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nGeometry.prototype.computeTangents = function () {\n\n\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n};\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebVRManager.prototype, {\n\n\tgetStandingMatrix: function () {\n\n\t\tconsole.warn( 'THREE.WebVRManager: .getStandingMatrix() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/LensFlare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\nimport * as THREE from './three.module.js'\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.ORBIT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.ZOOM:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n","import * as THREE from './THREE/three.module.js'\n\nconst scene = new THREE.Scene()\n\nconst camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 )\ncamera.position.z = 5\n\nconst renderer = new THREE.WebGLRenderer( { antialias: true } )\nrenderer.setSize( window.innerWidth, window.innerHeight )\nrenderer.setPixelRatio( window.devicePixelRatio )\ndocument.body.appendChild( renderer.domElement )\n\nwindow.addEventListener( 'resize', resizeWindow )\n\nconst ambientlight = new THREE.AmbientLight( 0x404040 )\nscene.add( ambientlight )\n\nconst axesHelper = new THREE.AxesHelper( 5 )\nscene.add( axesHelper )\n\nconst controls = new THREE.OrbitControls( camera )\ncontrols.enableZoom = false\n\nfunction resizeWindow() {\n\n\trenderer.setSize( window.innerWidth, window.innerHeight )\n\trenderer.setPixelRatio( window.devicePixelRatio )\n\n\tcamera.aspect = window.innerWidth / window.innerHeight\n\tcamera.updateProjectionMatrix()\n\n}\n\nexport {\n\tscene,\n\tcamera,\n\trenderer\n}","import { camera, scene, renderer } from './_base.js'\n\nfunction render() {\n\n\trenderer.render( scene, camera )\n\n}\n\nexport default render\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time > prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n}\n\nexport default Stats","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","export default {\n\tgallary: {\n\t\ttile: {\n\t\t\tnumber: 3,\n\t\t\twidth: 1,\n\t\t\tmargin: 0.2\n\t\t}\n\t}\n}","import * as THREE from './THREE/three.module.js'\nimport config from './config.js'\n\nclass GallaryItem {\n\n\tconstructor( data, index ) {\n\n\t\tthis.data = data\n\t\tthis.index = index\n\n\t\tthis.tile = config.gallary.tile\n\n\t\t/*this.doneEvent = new CustomEvent( 'done', {\n\t\t\tdetail: {\n\t\t\t\tdone: true\n\t\t\t},\n\t\t\t bubbles: true,\n\t\t\tcancelable: true\n\t\t} )*/\n\n\t\tthis.renderTile()\n\n\t}\n\n\trenderTile() {\n\n\t\tthis.canvas = document.createElement( 'canvas' )\n\t\tthis.texture = new THREE.Texture( this.canvas )\n\n\t\tthis.canvas.width = 1024\n\t\tthis.canvas.height = 1024\n\n\t\tconst number = this.tile.number,\n\t\t\tmargin = this.tile.margin,\n\t\t\twidth = this.tile.width,\n\n\t\t\tgeometry = new THREE.BoxGeometry( width, width, width / 2 ),\n\t\t\tmaterial = new THREE.MeshBasicMaterial( { color: 0xbbbbbb, map: this.texture } )\n\n\t\tthis.mesh = new THREE.Mesh( geometry, material )\n\t\tthis.mesh.translateX( this.index % number + ( margin * ( this.index % number ) ) )\n\t\tthis.mesh.translateY( -Math.floor( this.index / number ) - ( Math.floor( this.index / number ) * margin ) )\n\n\t\tthis.startProssesing()\n\n\t}\n\n\tstartProssesing() {\n\n\t\tthis.theOldFashionWay()\n\n\t\t//const canvas = document.createElement( 'canvas' )\n\n\t\t// if ( !( 'transferControlToOffscreen' in canvas ) ) {\n        //\n\t\t// \tthrow new Error( 'webgl in worker unsupported' )\n\t\t// \tthis.theOldFashionWay()\n        //\n\t\t// } else {\n        //\n\t\t// \tconsole.log( 'Start process of ', this )\n        //\n\t\t// \tthis.worker = new Worker( './worker.js' )\n        //\n\t\t// \tthis.worker.postMessage( 'hello there' )\n        //\n\t\t// \tthis.worker.onmessage = function( e ) {\n\t\t// \t\tconsole.log( e )\n\t\t// \t}\n        //\n\t\t// }\n\n\t}\n\n\ttheOldFashionWay() {\n\n\t\tconst that = this,\n\t\t\tg = this.canvas.getContext( '2d' ),\n\t\t\timg = new Image()\n\n\t\timg.src = this.data.img.value\n\n\t\timg.addEventListener( 'load', _drawImage )\n\n\t\t//document.body.appendChild( this.canvas )\n\t\t//document.body.appendChild( img )\n\n\t\tfunction _drawImage() {\n\n\t\t\tlet width, height\n\t\t\tconst position = []\n\n\t\t\tif ( this.naturalWidth > this.naturalHeight ) {\n\n\t\t\t\tconst ratio = 1024 / this.naturalWidth\n\n\t\t\t\twidth = this.naturalWidth * ratio\n\t\t\t\theight = this.naturalHeight * ratio\n\n\t\t\t\tposition.push( 0 )\n\t\t\t\tposition.push( ( 1024 - height ) / 2 )\n\n\t\t\t} else {\n\n\t\t\t\tconst ratio = 1024 / this.naturalHeight\n\n\t\t\t\twidth = this.naturalWidth * ratio\n\t\t\t\theight = this.naturalHeight * ratio\n\n\t\t\t\tposition.push( ( 1024 - width ) / 2 )\n\t\t\t\tposition.push( 0 )\n\n\t\t\t}\n\n\t\t\tg.drawImage( this, position[ 0 ], position[ 1 ], width, height )\n\n\t\t\t//that.mesh.material.map = new THREE.Texture( canvas )\n\n\t\t\tconsole.log( that.mesh )\n\t\t\t//that.mesh.material.map.needsUpdate = true\n\n\t\t\t//console.log( that.doneEvent )\n\t\t\t//that.mesh.dispatchEvent( that.doneEvent )\n\n\t\t}\n\n\t}\n\n}\n\nexport default GallaryItem\n","import * as THREE from './THREE/three.module.js'\nimport GallaryItem from './gallary_item.js'\nimport config from './config.js'\nimport { scene } from './_base.js'\n\nclass GallaryContainer {\n\n\tconstructor() {\n\n\t\tthis.totalWorkers = navigator.hardwareConcurrency || 4\n\n\t\tthis.all = []\n\t\tthis.allObjects = new THREE.Object3D()\n\t\tthis.done = []\n\t\tthis.waitingList = []\n\t\tthis.processing = []\n\n\t\tthis.data = []\n\n\t\tconst width = config.gallary.tile.width,\n\t\t\tmargin = config.gallary.tile.margin,\n\t\t\tnumber =  config.gallary.tile.number\n\n\t\t//\t\t\t\t\t\t\tFor first element - For entire width \t\t- For margin\n\t\tthis.allObjects.translateX( ( width / 2 ) - ( ( number / 2 ) * width ) - ( ( number - 1 ) * margin / 2 ) )\n\t\tscene.add( this.allObjects )\n\n\t}\n\n\tset setNewData( data ) {\n\n\t\tconst startIndex = this.data.length\n\n\t\tthis.data = this.data.concat( data )\n\n\t\tthis.createGallaryItems( data, startIndex )\n\n\t}\n\n\tcreateGallaryItems( data, startIndex ) {\n\n\t\tdata.forEach( ( dat, i ) => {\n\n\t\t\tconst item = new GallaryItem( dat, startIndex + i )\n\t\t\tthis.all.push( item )\n\t\t\tthis.allObjects.add( item.mesh )\n\t\t\t//this.waitingList.push( item )\n\t\t\t//item.startProssesing()\n\n\t\t} )\n\n\t\t//this.checkForAvailableWorkers()\n\n\t}\n\n\t/*checkForAvailableWorkers() {\n\n\t\tif ( this.processing.length === this.totalWorkers || this.waitingList.length === 0 ) return\n\n\t\tconst availableSpaceInWorker = this.totalWorkers - this.processing.length\n\n\t\tfor ( let i = 0; i < availableSpaceInWorker; i++ ) {\n\n\t\t\tconst item = this.waitingList.splice( 0, 1 )[ 0 ]\n\n\t\t\tthis.processing.push( item )\n\t\t\titem.mesh.addEventListener( 'done', this.itemIsDone )\n\t\t\titem.startProssesing()\n\n\t\t}\n\n\t}*/\n\n\titemIsDone( e ) {\n\n\t\tconsole.log( 'event',  e )\n\t\t// console.log( 'this.processing', this.processing )\n\n\t\t// const index = this.processing.indexOf( e.target )\n\t\t// this.processing.splice( index, 1 )\n\t\t// this.done.push( e.target )\n\n\t\t// console.log( 'this.processing', this.processing )\n\n\t}\n\n}\n\nconst gallaryContainer = new GallaryContainer()\nexport default gallaryContainer\n","import gallaryContainer from './gallary_container.js'\n\nfunction getOverviewData() {\n\n\tif ( window.localStorage.getItem( 'overview' ) ) {\n\n\t\tgallaryContainer.setNewData = JSON.parse( window.localStorage.getItem( 'overview' ) )\n\n\t} else {\n\t\tconst sparqlquery = `\n\t\t\t\tPREFIX dc: <http://purl.org/dc/elements/1.1/>\n\t\t\t\tPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\t\t\t\tSELECT DISTINCT ?type (COUNT(?cho) AS ?count) ?title ?img WHERE {\n\t\t\t\t\t?cho dc:type ?type .\n\t\t\t\t\t?cho dc:title ?title .\n\t\t\t\t\t?cho foaf:depiction ?img .\n\t\t\t\t}\n\t\t\t\tORDER BY DESC(?count)\n\t\t\t\tLIMIT 20`,\n\t\t\tencodedquery = encodeURIComponent( sparqlquery ),\n\t\t\tqueryurl = `https://api.data.adamlink.nl/datasets/AdamNet/all/services/endpoint/sparql?default-graph-uri=&query=${ encodedquery }&format=application%2Fsparql-results%2Bjson&timeout=0&debug=on`\n\n\t\tfetch( queryurl )\n\t\t\t.then( res => res.json() )\n\t\t\t.then( res => {\n\n\t\t\t\tconsole.log( res )\n\t\t\t\tgallaryContainer.setNewData = res.results.bindings\n\t\t\t\twindow.localStorage.setItem( 'overview', JSON.stringify( res.results.bindings ) )\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\tconsole.log( err )\n\n\t\t\t} )\n\n\t}\n\n}\n\nexport {\n\tgetOverviewData\n}","import * as THREE from './THREE/three.module.js'\nimport render from './render.js'\nimport Stats from './stats.js'\nimport { renderer } from './_base.js'\nimport { getOverviewData } from './api.js'\n\nfunction initializeScene() {\n\n\tgetOverviewData()\n\n\trenderer.animate( render )\n\n\tconst stats = new Stats()\n\tstats.showPanel( 0 )\n\tdocument.body.appendChild( stats.dom )\n\n\trequestAnimationFrame( animate )\n\n\tfunction animate() {\n\n\t\tstats.begin()\n\n\t\tstats.end()\n\n\t\trequestAnimationFrame( animate )\n\n\t}\n\n}\n\n\nexport default initializeScene","import '../css/style.scss'\n\nimport * as THREE from './THREE/three.module.js'\nimport OrbitControls from './THREE/OrbitControls.js'\nimport initializeScene from './initialize_scene.js'\n\n( function IFFE() {\n\n\tinitializeScene()\n\n} )()\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}